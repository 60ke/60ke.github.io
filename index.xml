<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LookForAdmin的博客</title><link>https://60ke.github.io/</link><description>Recent content on LookForAdmin的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 20 Apr 2022 16:25:36 +0800</lastBuildDate><atom:link href="https://60ke.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>任务计划</title><link>https://60ke.github.io/posts/%E4%BB%BB%E5%8A%A1%E8%AE%A1%E5%88%92/</link><pubDate>Mon, 11 Apr 2022 10:15:27 +0800</pubDate><guid>https://60ke.github.io/posts/%E4%BB%BB%E5%8A%A1%E8%AE%A1%E5%88%92/</guid><description>布隆过滤器实现 goleveldb源码阅读 etcd源码阅读 simpleraft实现</description></item><item><title>浅谈共识协议</title><link>https://60ke.github.io/posts/%E6%B5%85%E8%B0%88%E5%85%B1%E8%AF%86%E5%8D%8F%E8%AE%AE/</link><pubDate>Wed, 20 Apr 2022 16:25:36 +0800</pubDate><guid>https://60ke.github.io/posts/%E6%B5%85%E8%B0%88%E5%85%B1%E8%AF%86%E5%8D%8F%E8%AE%AE/</guid><description>什么是共识机制 先说共识,多个独立的个体对事物产生一致的认识.在计算机科学中,分布式系统中的一个基本问题是在存在多个故障进程的情况下实现系统的整体可靠性。这通常需要协调过程以达成共识，或就计算过程中需要的某些数据值达成一致。协商一致的示例应用包括约定将哪些事务以何种顺序提交到数据库</description></item><item><title>P2pHolePunching</title><link>https://60ke.github.io/posts/p2pHolePunching/</link><pubDate>Fri, 15 Apr 2022 11:23:44 +0800</pubDate><guid>https://60ke.github.io/posts/p2pHolePunching/</guid><description>P2pHolePunching之为了搞懂p2p打洞,我买了台腾讯云 what&amp;rsquo;s p2p p2p是点对点(端对端)协议.当前我们经常用的网络服务比如抖音,淘宝,百度,等等的网络架构为C/S架构即客户端/服务端.是中心化的,而纯粹的p2p通信,我们的主机既扮演客户端角色又扮演服务器角色,不再需要类似腾</description></item><item><title>彻底搞懂gcc</title><link>https://60ke.github.io/drafts/%E5%BD%BB%E5%BA%95%E6%90%9E%E6%87%82gcc/</link><pubDate>Fri, 29 Oct 2021 11:24:47 +0000</pubDate><guid>https://60ke.github.io/drafts/%E5%BD%BB%E5%BA%95%E6%90%9E%E6%87%82gcc/</guid><description>最近又遇到gcc编译参数的问题了，之前因为拷贝博客md后删除了博客仓库，导致之前使用评论的笔记全部丢失了(还是用md靠谱啊)，再次重新记录说明一下。 上代码: a.out gcc test.c -L/lib64 -ldtcsp -ldtrtl -lskf -Wl,-rpath /lib64/ root@user:/home/user/liurs-test# readelf -d a.out Dynamic section at offset 0x2de0 contains 28 entries: 标记 类型 名称/值 0x0000000000000001 (NEEDED) 共享库：[libdtcsp.so] 0x0000000000000001 (NEEDED) 共享库：[libdtrt</description></item><item><title>关于我</title><link>https://60ke.github.io/about/</link><pubDate>Tue, 10 Mar 2015 00:13:27 +0000</pubDate><guid>https://60ke.github.io/about/</guid><description/></item><item><title>归档</title><link>https://60ke.github.io/archives/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://60ke.github.io/archives/</guid><description/></item><item><title>搜索</title><link>https://60ke.github.io/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://60ke.github.io/search/</guid><description/></item></channel></rss>