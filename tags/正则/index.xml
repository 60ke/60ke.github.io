<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>正则 on LookForAdmin</title><link>https://60ke.github.io/tags/%E6%AD%A3%E5%88%99/</link><description>Recent content in 正则 on LookForAdmin</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 19 Apr 2017 09:19:00 +0000</lastBuildDate><atom:link href="https://60ke.github.io/tags/%E6%AD%A3%E5%88%99/index.xml" rel="self" type="application/rss+xml"/><item><title>Python正则表达式及列表与字符串的转换</title><link>https://60ke.github.io/drafts/python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8F%8A%E5%88%97%E8%A1%A8%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E8%BD%AC%E6%8D%A2/</link><pubDate>Wed, 19 Apr 2017 09:19:00 +0000</pubDate><guid>https://60ke.github.io/drafts/python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8F%8A%E5%88%97%E8%A1%A8%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E8%BD%AC%E6%8D%A2/</guid><description>&lt;h2 id="talk-is-cheap--show-you-code">Talk is cheap , show you code&lt;/h2>
&lt;p>import re
hao = (&amp;rsquo;&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->圣墟&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&amp;rsquo;)
target = re.findall(r&amp;rsquo;target=&amp;quot;_blank&amp;quot;&amp;gt;(.+?)&lt;!-- raw HTML omitted -->&amp;rsquo;, hao)
print(target)
print(type(target))
print (&amp;quot;&amp;quot;.join(target))&lt;/p>
&lt;pre>&lt;code>a = 'worileqing'
li = list(a)
print(type(a))
print(type(a))
print(li)
print(li[5])
&lt;/code>&lt;/pre>
&lt;p>输出：&lt;/p>
&lt;pre>&lt;code>['圣墟']
&amp;lt;class 'list'&amp;gt;
圣墟
&amp;lt;class 'str'&amp;gt;
&amp;lt;class 'str'&amp;gt;
['w', 'o', 'r', 'i', 'l', 'e', 'q', 'i', 'n', 'g']
e
&lt;/code>&lt;/pre>
&lt;p>参考：
&lt;img src="https://ws1.sinaimg.cn/large/6cf740f6ly1fes3zi3i4ij20hc0engnl.jpg"
loading="lazy"
>&lt;/p>
&lt;h2 id="refindall与recompile">re.findall与re.compile&lt;/h2>
&lt;p>测试代码&lt;/p>
&lt;h2 id="refindall">re.findall&lt;/h2>
&lt;pre>&lt;code>import re
a = &amp;quot;wodiddjfkj&amp;quot;
b = re.findall(r&amp;quot;d.+?k&amp;quot;,a)
c = re.findall(r&amp;quot;d(.+?)k&amp;quot;,a)
print(b)
print(c)
&lt;/code>&lt;/pre>
&lt;p>输出：&lt;/p>
&lt;pre>&lt;code>['diddjfk']
['iddjf']
&lt;/code>&lt;/pre>
&lt;h2 id="recompile">re.compile&lt;/h2>
&lt;pre>&lt;code>import re
a = &amp;quot;wodiddjfkj&amp;quot;
b = re.compile(r&amp;quot;d.+?k&amp;quot;)
c = b.findall(a)
print(b)
print(c)
&lt;/code>&lt;/pre>
&lt;p>输出：&lt;/p>
&lt;pre>&lt;code>re.compile('d.+?k')
['diddjfk']
&lt;/code>&lt;/pre>
&lt;h2 id="url解码">url解码：&lt;/h2>
&lt;p>测试代码：&lt;/p>
&lt;pre>&lt;code>import urllib.parse
print(urllib.parse.unquote(&amp;quot;%E6%B5%8B%E8%AF%95abc&amp;quot;))
&lt;/code>&lt;/pre>
&lt;p>输出：&lt;/p>
&lt;pre>&lt;code>测试abc
&lt;/code>&lt;/pre>
&lt;h2 id="url编码">url编码：&lt;/h2>
&lt;p>测试代码：&lt;/p>
&lt;pre>&lt;code>import urllib.parse
print(urllib.parse.quote(&amp;quot;测试abc&amp;quot;))
&lt;/code>&lt;/pre>
&lt;p>输出：&lt;/p>
&lt;pre>&lt;code>%E6%B5%8B%E8%AF%95abc
&lt;/code>&lt;/pre>
&lt;h2 id="补充">补充&lt;/h2>
&lt;p>用(.+?)来匹配任意字符中“.”是不包含/n的所以。。。
解决办法：
用([\s\S]*)来表示&lt;/p>
&lt;pre>&lt;code>bb = re.findall(&amp;quot;2\.([\s\S]*)&amp;quot;,aa))
&lt;/code>&lt;/pre>
&lt;p>表示的是匹配aa中&amp;quot;2.&amp;ldquo;之后的所有内容&lt;/p></description></item></channel></rss>