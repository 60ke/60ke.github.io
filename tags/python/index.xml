<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on LookForAdmin的博客</title><link>https://60ke.github.io/tags/python/</link><description>Recent content in python on LookForAdmin的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 29 Apr 2021 17:13:58 +0000</lastBuildDate><atom:link href="https://60ke.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>python解释器初探</title><link>https://60ke.github.io/drafts/python%E8%A7%A3%E9%87%8A%E5%99%A8%E5%88%9D%E6%8E%A2/</link><pubDate>Thu, 29 Apr 2021 17:13:58 +0000</pubDate><guid>https://60ke.github.io/drafts/python%E8%A7%A3%E9%87%8A%E5%99%A8%E5%88%9D%E6%8E%A2/</guid><description>1.解释器概念 1.1先看wiki中的定义: In computer science, an interpreter is a computer program that directly executes instructions written in a programming or scripting language, without requiring them previously to have been compiled into a machine language program. 大意为:*解释器是一种可以执行无需编译为机器码的脚步或程序语言的计算机程序.*如果执行的程序由虚拟机器语言或类似于机器语言的程序设计语言写成,解释器也可被称作虚拟机。 与解释</description></item><item><title>python多线程没变快？</title><link>https://60ke.github.io/drafts/python%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%B2%A1%E5%8F%98%E5%BF%AB/</link><pubDate>Wed, 18 Mar 2020 20:25:04 +0000</pubDate><guid>https://60ke.github.io/drafts/python%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%B2%A1%E5%8F%98%E5%BF%AB/</guid><description>先看代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 import datetime,time start_time = datetime.datetime.now() print() for i in range(10000): # time.sleep(0.01) print(i) print(str(datetime.datetime.now() - start_time)) from multiprocessing.dummy import Pool as ThreadPool def main(x): # time.sleep(0.01) print(x) start_time = datetime.datetime.now() l = [x for x in range(10000)] pool = ThreadPool(1000) pool.map(main, l) pool.close() pool.join() print(str(datetime.datetime.now() - start_time)) 当将time的那段代码注释时,多线程没有单线程跑得快,当取消注释时,多线程跑的快。说明带代码单一的暂停,阻塞时多线程快,当</description></item><item><title>mac下的Python2的mysql模块</title><link>https://60ke.github.io/drafts/mac%E4%B8%8B%E7%9A%84Python2%E7%9A%84mysql%E6%A8%A1%E5%9D%97/</link><pubDate>Thu, 30 May 2019 15:53:33 +0000</pubDate><guid>https://60ke.github.io/drafts/mac%E4%B8%8B%E7%9A%84Python2%E7%9A%84mysql%E6%A8%A1%E5%9D%97/</guid><description>mac下的Python2的mysql模块 1 2 3 4 5 6 7 brew install mysql brew unlink mysql brew install mysql-connector-c sed -i -e &amp;#39;s/libs=&amp;#34;$libs -l &amp;#34;/libs=&amp;#34;$libs -lmysqlclient -lssl -lcrypto&amp;#34;/g&amp;#39; /usr/local/bin/mysql_config pip install MySQL-python brew unlink mysql-connector-c brew link --overwrite mysql brew unlink mysql # only if installed, causes the next step to fail brew install mysql-connector-c locate mysql_config file with which (mysql_config) edit the mysql_config file, under # Create options change this: libs=&amp;quot;$libs -l &amp;quot; to this: libs=&amp;quot;$libs -lmysqlclient -lssl -lcrypto&amp;quot; if using vim, :wq! to save the read-only file Now the install should run successfully pip install mysqlclient Adding this separately, as it&amp;rsquo;s similar but not directly related to the initial question pip install MySQL-python Fix mysql brew formula, if it was unlinked</description></item><item><title>python对字典进行划分</title><link>https://60ke.github.io/drafts/python%E5%AF%B9%E5%AD%97%E5%85%B8%E8%BF%9B%E8%A1%8C%E5%88%92%E5%88%86/</link><pubDate>Fri, 01 Sep 2017 10:39:27 +0000</pubDate><guid>https://60ke.github.io/drafts/python%E5%AF%B9%E5%AD%97%E5%85%B8%E8%BF%9B%E8%A1%8C%E5%88%92%E5%88%86/</guid><description>code is cheap,show code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #!/usr/bin/env python # -*- coding: utf-8 -*- # @Date : 2017-09-01 15:38:11 # @Author : 60ke (worileqing@163.com) # @Link : http://www.worileqing.top # @Version : $Id$ import os list = [&amp;#39;a1&amp;#39;,&amp;#39;a2&amp;#39;,&amp;#39;a3&amp;#39;,&amp;#39;b1&amp;#39;,&amp;#39;b2&amp;#39;,&amp;#39;b3&amp;#39;,&amp;#39;c1&amp;#39;] num = len(list) data = {} for i in range(num): try: print(data[&amp;#39;%s&amp;#39;%list[i][0]]) except: data[&amp;#39;%s&amp;#39;%list[i][0]]=[] if list[i][0] in data: data[&amp;#39;%s&amp;#39;%list[i][0]].append(list[i]) print(data) result： 1 2 3 4 5 [&amp;#39;a1&amp;#39;] [&amp;#39;a1&amp;#39;, &amp;#39;a2&amp;#39;] [&amp;#39;b1&amp;#39;] [&amp;#39;b1&amp;#39;, &amp;#39;b2&amp;#39;] {&amp;#39;a&amp;#39;: [&amp;#39;a1&amp;#39;, &amp;#39;a2&amp;#39;, &amp;#39;a3&amp;#39;], &amp;#39;b&amp;#39;: [&amp;#39;b1&amp;#39;, &amp;#39;b2&amp;#39;, &amp;#39;b3&amp;#39;], &amp;#39;c&amp;#39;: [&amp;#39;c1&amp;#39;]}</description></item><item><title>Anaconda使用说明</title><link>https://60ke.github.io/drafts/Anaconda%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</link><pubDate>Wed, 26 Apr 2017 10:07:04 +0000</pubDate><guid>https://60ke.github.io/drafts/Anaconda%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</guid><description>&lt;h2 id="anaconda常用的命令">Anaconda常用的命令：&lt;/h2>
&lt;ul>
&lt;li>-conda list 查看安装了哪些包。&lt;/li>
&lt;li>conda env list 或 conda info -e 查看当前存在哪些虚拟环境&lt;/li>
&lt;li>conda update conda 检查更新当前conda&lt;/li>
&lt;li>conda -V 查看conda版本&lt;/li>
&lt;/ul></description></item><item><title>转载-Python 爬虫：把廖雪峰的教程转换成 PDF 电子书</title><link>https://60ke.github.io/drafts/%E8%BD%AC%E8%BD%BD-Python-%E7%88%AC%E8%99%AB%E6%8A%8A%E5%BB%96%E9%9B%AA%E5%B3%B0%E7%9A%84%E6%95%99%E7%A8%8B%E8%BD%AC%E6%8D%A2%E6%88%90-PDF-%E7%94%B5%E5%AD%90%E4%B9%A6/</link><pubDate>Sat, 22 Apr 2017 09:39:41 +0000</pubDate><guid>https://60ke.github.io/drafts/%E8%BD%AC%E8%BD%BD-Python-%E7%88%AC%E8%99%AB%E6%8A%8A%E5%BB%96%E9%9B%AA%E5%B3%B0%E7%9A%84%E6%95%99%E7%A8%8B%E8%BD%AC%E6%8D%A2%E6%88%90-PDF-%E7%94%B5%E5%AD%90%E4%B9%A6/</guid><description>&lt;p>来源：https://github.com/lzjun567/crawler_html2pdf/blob/master/pdf/crawler.py&lt;/p></description></item><item><title>Python代码中func(*args, **kwargs)</title><link>https://60ke.github.io/drafts/Python%E4%BB%A3%E7%A0%81%E4%B8%ADfuncargs-kwargs/</link><pubDate>Sat, 22 Apr 2017 04:10:00 +0000</pubDate><guid>https://60ke.github.io/drafts/Python%E4%BB%A3%E7%A0%81%E4%B8%ADfuncargs-kwargs/</guid><description>&lt;p>这个args其实是程序员对arguments的缩写,这种缩写可以说已经成为了一种传统（各种编程语言都这么做）；而argument的中文含义即为参数&lt;/p></description></item><item><title>煎蛋模块化爬虫</title><link>https://60ke.github.io/drafts/%E7%85%8E%E8%9B%8B%E6%A8%A1%E5%9D%97%E5%8C%96%E7%88%AC%E8%99%AB/</link><pubDate>Fri, 21 Apr 2017 12:46:00 +0000</pubDate><guid>https://60ke.github.io/drafts/%E7%85%8E%E8%9B%8B%E6%A8%A1%E5%9D%97%E5%8C%96%E7%88%AC%E8%99%AB/</guid><description>&lt;p>按照小甲鱼的Python课程打出来的,在find_imgs中添加了http:（未使用正则表达式）&lt;/p></description></item><item><title>煎蛋网妹子图抓取</title><link>https://60ke.github.io/drafts/%E7%85%8E%E8%9B%8B%E7%BD%91%E5%A6%B9%E5%AD%90%E5%9B%BE%E6%8A%93%E5%8F%96/</link><pubDate>Fri, 21 Apr 2017 08:33:05 +0000</pubDate><guid>https://60ke.github.io/drafts/%E7%85%8E%E8%9B%8B%E7%BD%91%E5%A6%B9%E5%AD%90%E5%9B%BE%E6%8A%93%E5%8F%96/</guid><description>&lt;p>代码写的很烂,不过目的总算达到了&lt;/p></description></item><item><title>Python 文件读写操作实例详解</title><link>https://60ke.github.io/drafts/Python-%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E6%93%8D%E4%BD%9C%E5%AE%9E%E4%BE%8B%E8%AF%A6%E8%A7%A3/</link><pubDate>Fri, 21 Apr 2017 08:23:00 +0000</pubDate><guid>https://60ke.github.io/drafts/Python-%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E6%93%8D%E4%BD%9C%E5%AE%9E%E4%BE%8B%E8%AF%A6%E8%A7%A3/</guid><description>&lt;p>脚本之家网上搜出来的,转给自己看&lt;/p></description></item><item><title>爬取起点中文网月票榜前500名网络小说</title><link>https://60ke.github.io/drafts/%E7%88%AC%E5%8F%96%E8%B5%B7%E7%82%B9%E4%B8%AD%E6%96%87%E7%BD%91%E6%9C%88%E7%A5%A8%E6%A6%9C%E5%89%8D500%E5%90%8D%E7%BD%91%E7%BB%9C%E5%B0%8F%E8%AF%B4/</link><pubDate>Wed, 19 Apr 2017 11:10:25 +0000</pubDate><guid>https://60ke.github.io/drafts/%E7%88%AC%E5%8F%96%E8%B5%B7%E7%82%B9%E4%B8%AD%E6%96%87%E7%BD%91%E6%9C%88%E7%A5%A8%E6%A6%9C%E5%89%8D500%E5%90%8D%E7%BD%91%E7%BB%9C%E5%B0%8F%E8%AF%B4/</guid><description>&lt;p>&amp;rsquo;''&lt;/p>
&lt;h2 id="参考自知乎httpszhuanlanzhihucomp26255754">参考自知乎https://zhuanlan.zhihu.com/p/26255754&lt;/h2>
&lt;h2 id="talk-is-cheap--show-your-code">Talk is cheap , show your code&lt;/h2>
&lt;p>所需模块： requests padndas BeautifulSoup&lt;/p></description></item><item><title>Python正则表达式及列表与字符串的转换</title><link>https://60ke.github.io/drafts/Python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8F%8A%E5%88%97%E8%A1%A8%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E8%BD%AC%E6%8D%A2/</link><pubDate>Wed, 19 Apr 2017 09:19:00 +0000</pubDate><guid>https://60ke.github.io/drafts/Python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8F%8A%E5%88%97%E8%A1%A8%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E8%BD%AC%E6%8D%A2/</guid><description>&lt;h2 id="talk-is-cheap--show-you-code">Talk is cheap , show you code&lt;/h2></description></item><item><title>python之有道翻译</title><link>https://60ke.github.io/drafts/python%E4%B9%8B%E6%9C%89%E9%81%93%E7%BF%BB%E8%AF%91/</link><pubDate>Tue, 18 Apr 2017 14:46:00 +0000</pubDate><guid>https://60ke.github.io/drafts/python%E4%B9%8B%E6%9C%89%E9%81%93%E7%BF%BB%E8%AF%91/</guid><description>&lt;p>Talk is cheap , show you code&lt;/p></description></item><item><title>python基础之生成器,迭代器,高阶函数</title><link>https://60ke.github.io/drafts/python%E5%9F%BA%E7%A1%80%E4%B9%8B%E7%94%9F%E6%88%90%E5%99%A8%E8%BF%AD%E4%BB%A3%E5%99%A8%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/</link><pubDate>Tue, 18 Apr 2017 08:31:00 +0000</pubDate><guid>https://60ke.github.io/drafts/python%E5%9F%BA%E7%A1%80%E4%B9%8B%E7%94%9F%E6%88%90%E5%99%A8%E8%BF%AD%E4%BB%A3%E5%99%A8%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/</guid><description>&lt;p>thumb,no&lt;/p>
&lt;h2 id="高阶函数">高阶函数&lt;/h2>
&lt;pre>&lt;code>def add(x,y,f):
return f(x)+(y)
add(3,(-4),abs)// 7
&lt;/code>&lt;/pre></description></item></channel></rss>